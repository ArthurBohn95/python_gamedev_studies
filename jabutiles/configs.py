from typing import Literal



Shapes = Literal['ort.square', 'ort.rect', 'iso', 'hex.flat', 'hex.point']

# Shape: 'ort.square', 'ort.rect', 'iso', 'hex.flat', 'hex.point'
# Operation: rotation(angle), mirror(axis)
# Value: angle or axis
TILE_MOVE_PARAMS: dict[Shapes, dict[str, dict[int|str, tuple[int, bool]]]] = {
    # ORTHOGONAL SQUARE/RECTANGLE ---------------------------------
    "ort": {
        # Rotation
        # | 0     | 90    | 180   | 270   |
        # | 1 2 3 | 3 4 5 | 5 6 7 | 7 8 1 |
        # | 8 0 4 | 2 0 6 | 4 0 8 | 6 0 2 |
        # | 7 6 5 | 1 8 7 | 3 2 1 | 5 4 3 |
        # Mirror
        # | 0     | '|'   | '-'   | '/'   | '\'   |
        # | 1 2 3 | 3 2 1 | 7 6 5 | 5 4 3 | 1 8 7 |
        # | 8 0 4 | 4 0 8 | 8 0 4 | 6 0 2 | 2 0 6 |
        # | 7 6 5 | 5 6 7 | 1 2 3 | 7 8 1 | 3 4 5 |
        "rotation": {
            0  : (+0, False),
            90 : (-2, False), # (3, 4, 5, 6, 7, 8, 1, 2)
            180: (-4, False), # (5, 6, 7, 8, 1, 2, 3, 4)
            270: (+2, False), # (7, 8, 1, 2, 3, 4, 5, 6)
        },
        "mirror": {
            '|' : (+3, True), # (3, 2, 1, 8, 7, 6, 5, 4)
            '-' : (-1, True), # (7, 6, 5, 4, 3, 2, 1, 8)
            '/' : (-3, True), # (5, 4, 3, 2, 1, 8, 7, 6)
            '\\': (+1, True), # (1, 8, 7, 6, 5, 4, 3, 2)
        },
    },
    
    # ISOMETRIC ---------------------------------------------------
    "iso": {
        # Rotation
        # | 0         | 90        | 180       | 270       |
        # |     1     |           |     5     |           |
        # |   8   2   |           |   4   6   |           |
        # | 7   0   3 |     X     | 3   0   7 |     X     |
        # |   6   4   |           |   2   8   |           |
        # |     5     |           |     1     |           |
        # Mirror
        # | 0         | '|'       | '-'       | '/'       | '\'       |
        # |     1     |     1     |     5     |           |           |
        # |   8   2   |   2   8   |   6   4   |           |           |
        # | 7   0   3 | 3   0   7 | 7   0   3 |     X     |     X     |
        # |   6   4   |   4   6   |   8   2   |           |           |
        # |     5     |     5     |     1     |           |           |
        "rotation": {
            180: (+4, False), # (5, 6, 7, 8, 1, 2, 3, 4)
        },
        "mirror": {
            '|': (+1, True), # (1, 8, 7, 6, 5, 4, 3, 2)
            '-': (-3, True), # (5, 4, 3, 2, 1, 8, 7, 6)
        },
    },
    
    # HEXAGONAL ---------------------------------------------------
    "hex.flat": {
        # FLAT
        # Rotation
        # | 0     | 90    | 180   | 270   |
        # |  1 2  |       |  4 5  |       |
        # | 6 0 3 |   X   | 3 0 6 |   X   |
        # |  5 4  |       |  2 1  |       |
        # Mirror
        # | 0     | '|'   | '-'   | '/'   | '\'   |
        # |  1 2  |  2 1  |  5 4  |       |       |
        # | 6 0 3 | 3 0 6 | 6 0 3 |   X   |   X   |
        # |  5 4  |  4 5  |  1 2  |       |       |
        "rotation": {
            180: (+3, False), # (4, 5, 6, 1, 2, 3)
        },
        "mirror": {
            '|': (+2, True), # (2, 1, 6, 5, 4, 3)
            '-': (-1, True), # (5, 4, 3, 2, 1, 6)
        },
    },
    
    "hex.point": {
        # POINT
        # Rotation
        # | 0     | 90    | 180   | 270   |
        # |   1   |       |   4   |       |
        # | 6 0 2 |   X   | 3 0 5 |   X   |
        # | 5   3 |       | 2   6 |       |
        # |   4   |       |   1   |       |
        # Mirror
        # | 0     | '|'   | '-'   | '/'   | '\'   |
        # |   1   |   1   |   4   |       |       |
        # | 6 0 2 | 2 0 6 | 5 0 3 |   X   |   X   |
        # | 5   3 | 3   4 | 6   2 |       |       |
        # |   4   |   4   |   1   |       |       |
        "rotation": {
            180: (+3, False), # (4, 5, 6, 1, 2, 3)
        },
        "mirror": {
            '|': (+1, True), # (1, 6, 5, 4, 3, 2)
            '-': (-2, True), # (4, 3, 2, 1, 6, 5)
        },
    },
}







